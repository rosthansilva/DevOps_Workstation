---
- hosts: all
  become: true
  vars:
    - admin_user: rosthansilva
  tasks:
    - name: Install ZSH
      become: yes
      apt:
        name: zsh
        state: latest

    - name: Install Oh-My-zsh for users
      git:
        repo: "https://github.com/robbyrussell/oh-my-zsh"
        version: master
        dest: "/home/{{ admin_user }}/.oh-my-zsh"
        update: no

    - name: create fira code script
      copy:
        dest: "/tmp/firacode.sh"
        content: |
          #!/usr/bin/env bash

          fonts_dir="${HOME}/.local/share/fonts"
          if [ ! -d "${fonts_dir}" ]; then
          echo "mkdir -p $fonts_dir"
          mkdir -p "${fonts_dir}"
          else
              echo "Found fonts dir $fonts_dir"
          fi

          version=5.2
          zip=Fira_Code_v${version}.zip
          curl --fail --location --show-error https://github.com/tonsky/FiraCode/releases/download/${version}/${zip} --output ${zip}
          unzip -o -q -d ${fonts_dir} ${zip}
          rm ${zip}

          echo "fc-cache -f"
          fc-cache -f
        mode: u=rwx,g=rx,o=rx
        owner: "{{ admin_user }}"

    - name: Run Script
      command: /tmp/firacode.sh

    - name: instalando Extenções do ZSH
      shell: |
        git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
        git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
        ~/.fzf/install
        git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
        git clone https://github.com/supercrabtree/k $ZSH_CUSTOM/plugins/k
      args:
        chdir: /tmp/

    - name: Set default shell for users
      become: yes
      user:
        name: '{{ admin_user }}'
        shell: /bin/zsh

    - name: Replace a localhost entry with our own
      lineinfile:
        path: /home/{{ admin_user }}/.zshrc
        regexp: '^plugins=(git)'
        line: 'plugins=( git zsh-syntax-highlighting fzf zsh-autosuggestions k docker kubernetes kubectl )'
        owner: root
        group: root
        mode: '0644'

    - name: "Adiciona Linhas se não existem"
      lineinfile:
        path:  /home/{{ admin_user }}/.zshrc
        line: "compinit"
        state: present
        backup: yes
      register: compinit_out

    - name: Verify zsh "autoload -Uz compinit" option
      lineinfile:
        path:  /home/{{ admin_user }}/.zshrc
        line: "autoload -Uz compinit"
        state: present
        backup: yes
      register: compinit_out

    - name: Instala Plugin no ZSH
      command: source <(kubectl completion zsh)

    - name: CMD Fix
      command : alias k="kubectl"

    - name : Instalando Extenção
      shell : echo "source <(kubectl completion zsh | sed 's/kubectl/k/g')" > /home/"{{ admin_user }}"/.zshrc

    - name: Minikube Starting
      command: minikube start
